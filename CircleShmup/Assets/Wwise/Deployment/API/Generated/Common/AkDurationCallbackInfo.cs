#if ! (UNITY_DASHBOARD_WIDGET || UNITY_WEBPLAYER || UNITY_WII || UNITY_WIIU || UNITY_NACL || UNITY_FLASH || UNITY_BLACKBERRY) // Disable under unsupported platforms.
/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.11
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


using System;
using System.Runtime.InteropServices;

public class AkDurationCallbackInfo : AkEventCallbackInfo {
  private IntPtr swigCPtr;

  internal AkDurationCallbackInfo(IntPtr cPtr, bool cMemoryOwn) : base(AkSoundEnginePINVOKE.CSharp_AkDurationCallbackInfo_SWIGUpcast(cPtr), cMemoryOwn) {
    swigCPtr = cPtr;
  }

  internal static IntPtr getCPtr(AkDurationCallbackInfo obj) {
    return (obj == null) ? IntPtr.Zero : obj.swigCPtr;
  }

  ~AkDurationCallbackInfo() {
    Dispose();
  }

  public override void Dispose() {
    lock(this) {
      if (swigCPtr != IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          AkSoundEnginePINVOKE.CSharp_delete_AkDurationCallbackInfo(swigCPtr);
        }
        swigCPtr = IntPtr.Zero;
      }
      GC.SuppressFinalize(this);
      base.Dispose();
    }
  }

  public float fDuration {
    get {
      float ret = AkSoundEnginePINVOKE.CSharp_AkDurationCallbackInfo_fDuration_get(swigCPtr);

      return ret;
    } 
  }

  public float fEstimatedDuration {
    get {
      float ret = AkSoundEnginePINVOKE.CSharp_AkDurationCallbackInfo_fEstimatedDuration_get(swigCPtr);

      return ret;
    } 
  }

  public uint audioNodeID {
    get {
      uint ret = AkSoundEnginePINVOKE.CSharp_AkDurationCallbackInfo_audioNodeID_get(swigCPtr);

      return ret;
    } 
  }

  public uint mediaID {
    get {
      uint ret = AkSoundEnginePINVOKE.CSharp_AkDurationCallbackInfo_mediaID_get(swigCPtr);

      return ret;
    } 
  }

  public bool bStreaming {
    get {
      bool ret = AkSoundEnginePINVOKE.CSharp_AkDurationCallbackInfo_bStreaming_get(swigCPtr);

      return ret;
    } 
  }

  public AkDurationCallbackInfo() : this(AkSoundEnginePINVOKE.CSharp_new_AkDurationCallbackInfo(), true) {

  }

}
#endif // #if ! (UNITY_DASHBOARD_WIDGET || UNITY_WEBPLAYER || UNITY_WII || UNITY_WIIU || UNITY_NACL || UNITY_FLASH || UNITY_BLACKBERRY) // Disable under unsupported platforms.